{"version":3,"file":"firebase.app.module.js","sourceRoot":"","sources":["../../../src/core/firebase.app.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAA0B,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEjE,OAAO,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AAEpG,OAAO,QAAQ,MAAM,eAAe,CAAC;AAQrC,MAAM;CAUL;AAED,MAAM,8BAA8B,OAAwB,EAAE,IAAa,EAAE,SAA6B;IACtG,MAAM,MAAM,GAAG,SAAS,IAAI,EAAE,CAAC;IAC/B,EAAE,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;QAC9C,OAAO,CAAC,IAAI,CAAC,2GAA2G,CAAC,CAAC;KAC7H;IACD,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,WAAW,CAAC;IACjD,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,MAAM,CAAC,CAAC,WAAW,IAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAgB,CAAC;CAClF;AAED,MAAM,mBAAmB,GAAG;IACxB,OAAO,EAAE,WAAW;IACpB,UAAU,EAAE,mBAAmB;IAC/B,IAAI,EAAE,CAAE,oBAAoB,EAAE,oBAAoB,EAAE,sBAAsB,CAAE;CAC/E,CAAC;AAKF,MAAM;IACF,MAAM,CAAC,aAAa,CAAC,OAAwB,EAAE,eAA4C;QACvF,MAAM,IAAI,GAAK,OAAO,eAAe,KAAK,QAAQ,IAAI,eAAe,IAAI,SAAS,CAAA;QAClF,MAAM,MAAM,GAAG,OAAO,eAAe,KAAK,QAAQ,IAAI,eAAe,IAAI,SAAS,CAAA;QAClF,MAAM,CAAC;YACH,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,oBAAoB,EAAI,QAAQ,EAAE,OAAO,EAAE;gBACtD,EAAE,OAAO,EAAE,oBAAoB,EAAI,QAAQ,EAAE,IAAI,EAAK;gBACtD,EAAE,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,MAAM,EAAG;aACzD;SACJ,CAAA;KACJ;;;YAfJ,QAAQ,SAAC;gBACN,SAAS,EAAE,CAAE,mBAAmB,CAAE;aACrC","sourcesContent":["import { InjectionToken, NgZone, NgModule } from '@angular/core';\n\nimport { FirebaseOptionsToken, FirebaseAppNameToken, FirebaseAppConfigToken } from './angularfire2';\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp as _FirebaseApp, FirebaseOptions, FirebaseAppConfig } from '@firebase/app-types';\nimport { FirebaseAuth } from '@firebase/auth-types';\nimport { FirebaseDatabase } from '@firebase/database-types';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseStorage } from '@firebase/storage-types';\nimport { FirebaseFirestore } from '@firebase/firestore-types';\n\nexport class FirebaseApp implements _FirebaseApp {\n    name: string;\n    automaticDataCollectionEnabled: boolean;\n    options: {};\n    auth: () => FirebaseAuth;\n    database: (databaseURL?: string) => FirebaseDatabase;\n    messaging: () => FirebaseMessaging;\n    storage: (storageBucket?: string) => FirebaseStorage;\n    delete: () => Promise<void>;\n    firestore: () => FirebaseFirestore;\n}\n\nexport function _firebaseAppFactory(options: FirebaseOptions, name?: string, appConfig?: FirebaseAppConfig): FirebaseApp {\n    const config = appConfig || {};\n    if (name && config.name && config.name !== name) {\n        console.warn('FirebaseAppNameToken and FirebaseAppConfigToken.name don\\'t match, FirebaseAppNameToken takes precedence.');\n    }\n    config.name = name || config.name || '[DEFAULT]';\n    const existingApp = firebase.apps.filter(app => app.name === config.name)[0];\n    return (existingApp || firebase.initializeApp(options, config)) as FirebaseApp;\n}\n\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: _firebaseAppFactory,\n    deps: [ FirebaseOptionsToken, FirebaseAppNameToken, FirebaseAppConfigToken ]\n};\n \n@NgModule({\n    providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n    static initializeApp(options: FirebaseOptions, appNameOrConfig?: string | FirebaseAppConfig) {\n        const name   = typeof appNameOrConfig === 'string' && appNameOrConfig || undefined\n        const config = typeof appNameOrConfig === 'object' && appNameOrConfig || undefined\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FirebaseOptionsToken,   useValue: options },\n                { provide: FirebaseAppNameToken,   useValue: name    },\n                { provide: FirebaseAppConfigToken, useValue: config  }\n            ]\n        }\n    }\n}"]}