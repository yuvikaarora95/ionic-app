{"version":3,"file":"database.js","sourceRoot":"","sources":["../../../src/database-deprecated/database.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACrE,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAG9D,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAElE,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;;IAU1I,6BACgC,SACE,QACU,MACD,aACzC,IAAY;QAEZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACrC,IAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACvD,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;SAC/C,CAAC,CAAC;KACJ;IAED,kCAAI,GAAJ,UAAK,SAAwB,EAAE,IAA6B;QAC1D,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACnD,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACvC;IAED,oCAAM,GAAN,UAAO,SAAwB,EAAE,IAA+B;QAC9D,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACnD,MAAM,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACzC;;gBA7BF,UAAU;;;gDASN,MAAM,SAAC,oBAAoB;gDAC3B,MAAM,SAAC,sBAAsB;gDAC7B,QAAQ,YAAI,MAAM,SAAC,oBAAoB;gDACvC,QAAQ,YAAI,MAAM,SAAC,mBAAmB;gBAtBJ,MAAM;;8BAD7C;;SAYa,mBAAmB;AAgChC,OAAO,EAAE,mBAAmB,EAAE,CAAC","sourcesContent":["import { FirebaseDatabase } from '@firebase/database-types';\nimport { Inject, Injectable, Optional, NgZone } from '@angular/core';\nimport { FirebaseListFactory } from './firebase_list_factory';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { FirebaseListFactoryOpts, FirebaseObjectFactoryOpts, PathReference } from './interfaces';\nimport { FirebaseObjectFactory } from './firebase_object_factory';\nimport { FirebaseObjectObservable } from './firebase_object_observable';\nimport * as utils from './utils';\nimport { FirebaseOptions, FirebaseAppConfig } from '@firebase/app-types';\nimport { FirebaseAppConfigToken, FirebaseOptionsToken, FirebaseAppNameToken, RealtimeDatabaseURL, _firebaseAppFactory } from 'angularfire2';\n\n@Injectable()\nexport class AngularFireDatabase {\n\n  /**\n   * Firebase Database instance\n   */\n  database: FirebaseDatabase;\n\n  constructor(\n    @Inject(FirebaseOptionsToken) options:FirebaseOptions,\n    @Inject(FirebaseAppConfigToken) config:FirebaseAppConfig,\n    @Optional() @Inject(FirebaseAppNameToken) name:string,\n    @Optional() @Inject(RealtimeDatabaseURL) databaseURL:string,\n    zone: NgZone\n  ) {\n    this.database = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, name, config);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list(pathOrRef: PathReference, opts?:FirebaseListFactoryOpts):FirebaseListObservable<any[]> {\n    const ref = utils.getRef(this.database, pathOrRef);\n    return FirebaseListFactory(ref, opts);\n  }\n\n  object(pathOrRef: PathReference, opts?:FirebaseObjectFactoryOpts):FirebaseObjectObservable<any> {\n    const ref = utils.getRef(this.database, pathOrRef);\n    return FirebaseObjectFactory(ref, opts);\n  }\n\n}\n\nexport { RealtimeDatabaseURL };"]}